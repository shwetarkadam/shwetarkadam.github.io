<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shweta's Braindump</title><link>https://notes.codeklutz.com/</link><description>Recent content on Shweta's Braindump</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.codeklutz.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Apache Kafka</title><link>https://notes.codeklutz.com/notes/20220705094105-apache_kafka/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220705094105-apache_kafka/</guid><description>Why to Use Kafka Kafka Features And Usecases Kafka Topics Kafka Partitions and Offsets Kafka Producers Kafka Message Serializers Kafka Consumers Kafka Consumer Groups andf Offsets</description></item><item><title>BinarySearch</title><link>https://notes.codeklutz.com/notes/20220511201649-binarysearch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220511201649-binarysearch/</guid><description>Idenitification If the array given is SORTED,then always go for Binary Search approach.
Mid can be calculated as:
mid= start + (end-start)/2 Instead of start+end /2 to avoid Integer overflow (testcases have these)
For types of problems involving rotated sorted array or find element in such a rotated sorted array ,thumb rule to remember No of rotations = index of minimum element And once you get the min element and its index u can use that as starting mid and apply binarySearch from there.</description></item><item><title>Conversions Using Java Streams</title><link>https://notes.codeklutz.com/notes/20220508090903-conversionsusingjavastreams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220508090903-conversionsusingjavastreams/</guid><description>Conversions of various data structures using Streams
- int []array -&amp;gt; Integer ArrayList List&amp;lt;Integer&amp;gt; l=Arrays.stream(nums).boxed().toList(); This code will create a unmodifiable list as Arrays.toList creates a wrapper list over the array.Exactly as array&amp;rsquo;s length cannot be change the lengthof this list cannot be changed too. Hence methods like remove() will give Unsupported Operation exception
To solve this,just create a &amp;ldquo;real&amp;rdquo; new list List&amp;lt;Integer&amp;gt; l=new ArrayList(Arrays.stream(nums).boxed().toList()); - Integer ArrayList -&amp;gt; int []array int[] example1 = list.</description></item><item><title>DB Replication</title><link>https://notes.codeklutz.com/notes/20220517185455-db_replication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220517185455-db_replication/</guid><description>Master Slave concept Master db generally supports only write operations such as INSERT DELETE UPDATE .
Slave db gets copies of the data from the master database and only supports read operations.
Most apps have high ratio of reads to writes hence no. of slaves &amp;gt; no of master dbs generally.
Advantages of DB replication:
Better Performance :</description></item><item><title>Doom Emacs Daily Bindings</title><link>https://notes.codeklutz.com/notes/20220516124502-doom_emacs_daily_bindings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220516124502-doom_emacs_daily_bindings/</guid><description>My daily needed bindings for doom emacs.
Open/Close Treemacs tree : SPC o p Fuzzy search using IVY : Go to the project location and for fuzzy find files SPC SPC Jump file to project SPC pf OR SPC SPC To shift between themes temporarily : SPC h t Reference : https://docs.doomemacs.org/latest/modules/completion/ivy/</description></item><item><title>Engineering Career Planning</title><link>https://notes.codeklutz.com/notes/20220508010915-engineeringcareerplanning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220508010915-engineeringcareerplanning/</guid><description>Framework for self evaluation and reflection of engineering carrier and achieving Impact for your role and team.
DropBox Career Planning Link: Engineering Career Planning</description></item><item><title>EngineeringRoadmap</title><link>https://notes.codeklutz.com/notes/20220508095606-engineeringroadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220508095606-engineeringroadmap/</guid><description>Roadmap to refer : https://roadmap.sh/backend</description></item><item><title>Functional Programming</title><link>https://notes.codeklutz.com/notes/20220507070353-functionalprogramming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507070353-functionalprogramming/</guid><description>We have :
Inhererent Complexiity: Complexiitystemming from domain Accidental complexity: Complexity we create while trying to deal with inehrent complexity. &amp;gt; Functional Programming removes Accidental Complexity.
Functional Programming properties:
Assignment less Programming: Much like how we dont use goto while coding but its okay for compiler to use go under the hood.
goto is to strucutred programming assignment is to funtional programming (We try to avoid assignments)
Immutable state: We can make smart copies of objects instead of true copy or fully copy like trie data strcuture.</description></item><item><title>Git</title><link>https://notes.codeklutz.com/notes/20220507132936-git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507132936-git/</guid><description>Update local feature from master branch git checkout the_branch_you_want_to_update git merge origin/master For same changes to reflect in remote branch git push origin the_branch_you_want_to_update //to update the remote feature branch To see the list of commits that are causing conflict git log --merge Maintain multiple users in git without ssh for specfic repos Refer</description></item><item><title>Grind75 Leetcode ProblemSet</title><link>https://notes.codeklutz.com/notes/20220520194919-grind75leetcodeproblemset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220520194919-grind75leetcodeproblemset/</guid><description>https://www.techinterviewhandbook.org/grind75 https://www.techinterviewhandbook.org/software-engineering-interview-guide/ https://leetcode.com/discuss/general-discussion/460599/blind-75-leetcode-questions</description></item><item><title>Header Enrichment</title><link>https://notes.codeklutz.com/notes/20220510121831-headerenrichment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220510121831-headerenrichment/</guid><description>HTTP Header Enrichment is a mobile-network capability to authenticate/identify a msisdn,who is browsing thru the internet using mobile network.
It can be used to identify a mobile subscriber based on HTTP request.The process consists of adding data fields in the HTTP header.
Event based:This type of HTTP request is ususally triggered in the background by some of app running on the device in response to an event</description></item><item><title>How To Solve A Problem When You Are Stuck</title><link>https://notes.codeklutz.com/notes/20220507234854-howtosolveaproblemwhenyouarestuck/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507234854-howtosolveaproblemwhenyouarestuck/</guid><description>Short thoughts on how to design or decide on actions when you are stuck or going round and round in circles when you face an issue.
Constantly ASK YOURSELF what you are trying to do While working when the goal or roadmap is not clear OR
When Im doing something from scratch OR
When there is a lot of uncertainity and many options to do</description></item><item><title>Hypothesis Induction Base Recursive Method</title><link>https://notes.codeklutz.com/notes/20220516182014-hypothesis_induction_base_recursive_method/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220516182014-hypothesis_induction_base_recursive_method/</guid><description>Hypothesis Induction Base Method :
Better for tree,linked lists,stack using problems.
GOAL here is to make input SMALLER
Hypothesis: In this, assume a function with its neceesary input and what we expect in that output.
solveHeightOfBinaryTree(Node root )-&amp;gt; 3 solveHeightOfBinaryTree(Node subnodeAtLevel2) -&amp;gt; 2 Induction: This invlolves taking a 1 scenario (easiest one ) and storing result in temp or later to be used later And then process next element.</description></item><item><title>Interesting Blogs</title><link>https://notes.codeklutz.com/notes/20221012164431-interestingblogs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20221012164431-interestingblogs/</guid><description> Julia Evans https://wizardzines.com/comics/ https://lokesh1729.com/posts/resources-for-cracking-data-structures-algorithms-interview</description></item><item><title>Iterators</title><link>https://notes.codeklutz.com/notes/20220507070445-iterators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507070445-iterators/</guid><description>External to Internal Iterators. Given
List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1,2,3,4,5,6,7,8,9,10) External Iterators
for (int i = 0; i &amp;lt; numbers.size(); i++){ System.out.println(numbers.get(i)); } Internal Iterators
numbers.forEach((Integer E) -&amp;gt; System.out.println(e)); or even type inference in Java
numbers.forEach((e) -&amp;gt; System.out.println(e)); or method reference
numbers.forEach(System.out::println);</description></item><item><title>Java Streams</title><link>https://notes.codeklutz.com/notes/20220507133804-javastreams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507133804-javastreams/</guid><description>In FunctionalProgramming , we tell the code what to do and the livbrary does it for us.In imperative style we tell the code what to do and how to do it.
Java Stream Operations Methods include :
Conversions Using Java Streams</description></item><item><title>Kafka Consumer Groups andf Offsets</title><link>https://notes.codeklutz.com/notes/20220707101731-kafka_consumer_groups_andf_offsets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220707101731-kafka_consumer_groups_andf_offsets/</guid><description>All consumers in a an application read data as consumers groups.. But what if there are too many consumers ?
If you have more consumers than partition then some consumers will be inactive Multiple consumers in 1 topic In kafkaa it is acceptable tio have multiple consumer groups on same topic To create distinct consumer groups use consumer property group.</description></item><item><title>Kafka Consumers</title><link>https://notes.codeklutz.com/notes/20220707101312-kafka_consumers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220707101312-kafka_consumers/</guid><description>Consumers read data from topic (identified by name )-pull model Consumers automatically known which broker to read data from . In case of broker failures consumers know how to recover Data is read in order from low offset to high offset within each partition. Consumer Deserializers Deserializers indicates how to transform bytes into objects/data. They are used on value and key of message.</description></item><item><title>Kafka Features And Usecases</title><link>https://notes.codeklutz.com/notes/20220705102607-kafka_features_and_usecases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220705102607-kafka_features_and_usecases/</guid><description>Features Distributed , resilent architecture Fault tolerant Horizonatal scalability
can scale to 100s brokers can scale upto millions of messages High Performance Use cases Messaging System ,Activity Tracker,Application logs gathering ,Gather metrcis from different lcations Stream priocessing with kafka streams api Decoupling of system dependencies Microservices pub/sub Integration with spark,flink,storm,hadoopand many other big data technologies .</description></item><item><title>Kafka Message Serializers</title><link>https://notes.codeklutz.com/notes/20220706104527-kafka_message_serializers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220706104527-kafka_message_serializers/</guid><description>How do the messages get created? Using Message Serizliers
Kafka only accepts bytes as input from producers and sends bytes as output to consumers. Message Serializers means transforming objects/data inot bytes. They are used on value and key Key object 123 -&amp;gt; INT -&amp;gt; Key serializer : Integer serializer(smart enough to figure it out ) -&amp;gt; BYTES -&amp;gt; Key : binary
Value object &amp;ldquo;123healloi&amp;rdquo; -&amp;gt; STRING -&amp;gt; Value serializer : String serializer(smart enough to figure it out ) -&amp;gt; BYTES -&amp;gt; Value : binary</description></item><item><title>Kafka Partitions and Offsets</title><link>https://notes.codeklutz.com/notes/20220706102404-kafka_partitions_and_offsets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220706102404-kafka_partitions_and_offsets/</guid><description>Topics are splity into partitions. Messages within each artition are ordered. Each Message within a partition gets an incrementl id called offset. Kafka topics are IMMUTABLE .Once data is written into a partition it cannot be changed (NO UPDATE&amp;lt;EDIT&amp;lt;DELETE) Partition 0
Kafka TOPIC
Partition 1
Eg: truck_gps If you have a fleet of trucks . Each truck reports its GPS position to Kafka. Each truck will send a message to Kafka every 20 seconds .</description></item><item><title>Kafka Producers</title><link>https://notes.codeklutz.com/notes/20220706103544-kafka_producers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220706103544-kafka_producers/</guid><description>Producers write data to topics (which they are part of ) Producers already know to which partition to writwe to and which kafka broker has it In case of key broker failures ,Producers will automatically recover Producers Message Keys Producers can choose to send a key with the message.(string ,binary,etc) If key== NULL, data is sent round robin(partition 0,1,2) If key !</description></item><item><title>Kafka Topics</title><link>https://notes.codeklutz.com/notes/20220706102044-kafka_topics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220706102044-kafka_topics/</guid><description>Topic: a particulart stream of data . Like a table in a db (without constraints) A sequence of messages is called data stream. You can have as many topics as you want Topics are identified by NAME. Any kind of message format (CSV,JSON,XML) You cannot query topics instead use Kafka producers to send data and consumers to read the data</description></item><item><title>KeyPoints in Kafka Partitions/Offsets</title><link>https://notes.codeklutz.com/notes/20220706103142-keypoints_in_kafka_partitions_offsets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220706103142-keypoints_in_kafka_partitions_offsets/</guid><description>Once data is written to a partition it cannot be changed(immutability). Data is kept only for a limited amount of time (default is 1 week -configyurable) then it disappears. Offset only have a meaning for a specific partition. Eg: Offset 3 in part 0 doesnt represent the same data as offset 3 in partition1. Offsets are not reused even if previous message is deleted. Order is guranteed only within a partition(not across partitions).</description></item><item><title>LazyEvaluation</title><link>https://notes.codeklutz.com/notes/20220507133417-lazyevaluation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507133417-lazyevaluation/</guid><description>Given
List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1,2,3); We have a lambda that relies on the external array factor
int[] factor = new int[] { 2 }; Steam&amp;lt;Integer&amp;gt; strm = numbers.stream().map(e -&amp;gt; e * factor[0]); factor[0] = 0 strm.forEach(System.out::println) This makes the lambda not pure; it relies on external elements that can change.
While we initially expected the printed output to be 2, 4, 6 we’ll be getting 0,0,0 This is because the lazy evaluation happens after the change.</description></item><item><title>LeetCode Patterns</title><link>https://notes.codeklutz.com/notes/20220725173930-leetcode_patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220725173930-leetcode_patterns/</guid><description>If USE Input array is sorted Binary Search 2 Pointers all Permutations and subsets are asked Backtracking given a Tree/ Graph DFS ,BFS given a linked list 2 Pointers recursion is banned Stack Must solve in-place Swap coressponding values Store One or more diffirent values in same pointer.</description></item><item><title>Letters To Me</title><link>https://notes.codeklutz.com/notes/20220621190528-letters_to_me/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220621190528-letters_to_me/</guid><description>Migrating https://letters.codeklutz.com/ to this braindump to make myself easier to fetch and process.
Web extension that converts video audio to text and stores it in file 27 February,2022, Tuesday @4:40pm
Since these days I’m learning thru other course videos such as Coursera ,udemy and usually I have notes (thru note.codeklutz.com) but then an idea of actually converting any video’s audio into text came up.
But as to how to detect every video’s audio seems a challenge for now.</description></item><item><title>Lists HashMap Sets Iterators Java</title><link>https://notes.codeklutz.com/notes/20220616113651-lists_hashmap_sets_iterators_java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220616113651-lists_hashmap_sets_iterators_java/</guid><description>Return element from a set having single element Case where you know you will have only single element in list after your processing and wish to return the element and you dont know what is the actual class
Element ele= set.iterator().next();
OR
return set.iterator().next();</description></item><item><title>Messaging Queues</title><link>https://notes.codeklutz.com/notes/20220613201350-messaging_queues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220613201350-messaging_queues/</guid><description>Messaging queue is a durable compoment whihc supports asynchronous communication.
It acts as a buffer and distributes asynchronous requests.
PRODUCER &amp;ndash;&amp;gt; MESSAGE QUEUE &amp;lt;&amp;ndash;&amp;gt; CONSUMER
PRODUCER produces/publishes &amp;mdash;&amp;gt; MESSAGE QUEUE stores the requests &amp;mdash;&amp;gt; CONSUMER is subscribed to the queue and consumes the messages from the queue.
Decoupling makes the message queue a prefffered choice while building scalable distributed applications.
With the queue, the producer can produce messages even when the consumer is not available to process it.</description></item><item><title>Recursion</title><link>https://notes.codeklutz.com/notes/20220507121211-recursion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507121211-recursion/</guid><description>Approaches to Recursion acc to Aditya Varma
Recursive Tree - Input Output Method (Decision making problems) Hypothesis Induction Base Recursive Method (Better for tree ,linked lists) Choice Diagram (DP)</description></item><item><title>Sharding</title><link>https://notes.codeklutz.com/notes/20220613202322-sharding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220613202322-sharding/</guid><description> Horizontal scaling in db context is known as sharding. The practice of adding more servers. Sharding seperates large databases into more smaller ,easily managed parts called shards. Each shard shares the same schema,though the actual data on each shard is unique to the shard.</description></item><item><title>Shweta's Braindump</title><link>https://notes.codeklutz.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/about/</guid><description>Hi! I&amp;rsquo;m Shweta , and you&amp;rsquo;ve stumbled upon my braindump. This website contains my working notes accumulated over some weeks. I shall add which I find insightful or useful. So stay tuned
You can start hopping around by going to the full index . Have fun!</description></item><item><title>Sliding Window</title><link>https://notes.codeklutz.com/notes/20220507061840-slidingwindow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507061840-slidingwindow/</guid><description>Aditya Verma Approach to sliding window :
Identificatiion : Could be array or string. There is a window which is continous (doesnt break) . Question might ask related to subarray or substring .Also it can ask largest or smallest value in the question. Window size will be given or the question might ask to find out window size. Window Size | Condition 2 Types of Sliding window problems:</description></item><item><title>SSL</title><link>https://notes.codeklutz.com/notes/20220621191231-ssl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220621191231-ssl/</guid><description>Commands to debug issues related to ssl
Check if website cert has expired: ``` openssl s_client -showcerts -connect google.com:443 2&amp;gt; /dev/null | openssl x509 -noout -dates``` notBefore=Aug 19 08:07:15 2020 GMT notAfter=Aug 24 23:59:59 2021 GMT | openssl x509 -noout -issuer -dates -subject -serial Print certs from cacerts or any file using keytool command keytool -v -keystore YOUR_PC/jdk/Contents/Home/jre/lib/security/cacerts -list Convert certificate into appropriate format https://knowledge.</description></item><item><title>String Manipulation In Java</title><link>https://notes.codeklutz.com/notes/20220521000515-stringmanipulationinjava/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220521000515-stringmanipulationinjava/</guid><description>Remove all SPACES from a string and concentate s=s.replaceAll(&amp;quot;\\s&amp;quot;,&amp;quot;&amp;quot;); Remove all PUNCTUATIONS from a string s=s.replaceAll(&amp;quot;\\p{Punct}&amp;quot;,&amp;quot;&amp;quot;);</description></item><item><title>Traceroute</title><link>https://notes.codeklutz.com/notes/20220516193802-traceroute/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220516193802-traceroute/</guid><description>traceroute shows you what data travels from computer to the internet and what and how many hops it takes.
Can be used to solve connection refused errors where you need to find out ast what point or hop it started restrcition. traceroute google.com traceroute ip_addr</description></item><item><title>Useful Java Tricks for LeetCode</title><link>https://notes.codeklutz.com/notes/20220616113444-useful_java_tricks_for_leetcode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220616113444-useful_java_tricks_for_leetcode/</guid><description>String Manipulation In Java Conversions Using Java Streams Lists HashMap Sets Iterators Java</description></item><item><title>Variable Size Sliding Window Format</title><link>https://notes.codeklutz.com/notes/20220507070237-variablesizeslidingwindowformat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220507070237-variablesizeslidingwindowformat/</guid><description>General Format of Variable Size Sliding Window by Aditya Verma while(j&amp;lt;size) { some calculations involving j if(condition &amp;lt;k) j++; else if(cond. ==k) { ans=calcul;ations j++; } else if( condition &amp;gt;k ){ while(condition &amp;gt;k){ remove calculation for i i++; } j++ } }</description></item><item><title>Why to Use Kafka</title><link>https://notes.codeklutz.com/notes/20220705101245-why_to_use_kafka/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220705101245-why_to_use_kafka/</guid><description>Problem Companies usually have some data which moves from SOURCE SYSTEM -&amp;gt; TARGET SYSTEM. Initally it is simply just write code -&amp;gt; take the data and extract it -&amp;gt; transform the data -&amp;gt; Load the data .This sort of makes 1 integration. But as company evolve the number of source and target systems increase. Each Integration itself comes with its own set of problems such as :</description></item><item><title>Workout</title><link>https://notes.codeklutz.com/notes/20220628170115-workout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.codeklutz.com/notes/20220628170115-workout/</guid><description>Monday :- Abs: Upper Kneeling Cable Rope Crunch (3 sets of 15 ) https://www.youtube.com/watch?v=jBtiDLz0y7s Shoulder: Lateral Deltoid : Lateral Shoulder Dumbell Row (3 sets of 15) Bicep: ShortHead: Seated Concentration Curl (3 sets of 12 ) https://youtu.be/20ibpB635Rw?t=61 Legs: HamString And Glutes : Leg-Extension press (3 sets of 10-12) Back: One-arm lats pull down (3 sets of 12) https://www.youtube.com/watch?v=KGwi_oSQrAY&amp;t=343s Tuesday:- Chest : Upper: Chest Press ( 3 sets of 10) https://www.</description></item></channel></rss>